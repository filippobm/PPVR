@using PPVR.WebApp.Resources
@using X.PagedList.Mvc
@model X.PagedList.StaticPagedList<PPVR.WebApp.ViewModels.TipoPropaganda.TipoPropagandaViewModel>

@{
    ViewBag.Title = Labels.TiposPropaganda;
}

<h2>@ViewBag.Title</h2>
<hr>

@Helpers.CallbackActionAlert(ViewBag.CallbackAction)

@using (Html.BeginForm("Index", "TiposPropaganda", FormMethod.Get, new { @class = "form-horizontal" }))
{
    <div class="form-group">
        <div class="col-sm-7">
            <div class="input-group">
                <input id="q" class="form-control" name="q" type="text"
                       placeholder="@Labels.TiposPropagandaPesquisarPlaceholder"
                       value="@((string) ViewBag.CurrentFilter)">
                <span class="input-group-btn">
                    <button class="btn btn-primary" type="submit" title="@Labels.Pesquisar">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    </button>
                </span>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-sm-12">
        <div class="pull-right" style="margin-bottom: 10px;">
            <a href="@Url.Action("Create", "TiposPropaganda")" class="btn btn-success" title="@Labels.Adicionar">
                @Labels.Adicionar
                <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
            </a>
        </div>
    </div>
</div>

<table class="table table-striped table-condensed">
    <tr>
        <th>
            <a href="@Url.Action("Index", new {q = ViewBag.CurrentFilter, sort = ViewBag.SortDescricao})">
                @Html.LabelFor(m => m[0].Descricao)
            </a>
        </th>
        <th class="text-center">
            <a href="@Url.Action("Index", new {q = ViewBag.CurrentFilter, sort = ViewBag.SortValorMedio})">
                @Html.LabelFor(m => m[0].ValorMedio)
            </a>
        </th>
        <th class="text-center">
            @Html.LabelFor(m => m[0].Enabled)
        </th>
        <th class="text-right">
            @Labels.Acoes
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @item.Descricao
            </td>
            <td class="text-center">
                @item.ValorMedio
            </td>
            <td class="text-center">
                @Html.DisplayFor(m => item.Enabled)
            </td>
            <td class="text-right">
                <a href="@Url.Action("Edit", "TiposPropaganda", new {id = item.TipoPropagandaId})" c class="btn btn-default" , title="@Labels.Editar">
                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                </a>
            </td>
        </tr>
    }

</table>

<div class="row">
    <div class="col-sm-3">
        <div class="pull-left">
            Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
        </div>
    </div>
    <div class="col-sm-6">
        <div class="text-center">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { q = ViewBag.CurrentFilter, sort = ViewBag.CurrentSort, page }))
        </div>
    </div>
    <div class="col-sm-3">
        <div class="pull-right">
            @{ WriteLiteral($"{Labels.TotalDe} {Labels.TiposPropaganda}: {Model.TotalItemCount}"); }
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $(function () {
            selectedTextFocus("q");
        });
    </script>
}